<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href= "/assets/css/login.css" rel="stylesheet" type="text/css" />
    <title>Essay Grader Login</title>
</head>
<body>
    <header>
        <%- include('./partials/header'); %>
    </header>
    <div class="login-page">
        <div class="login-form">
            <div class="inputs">
                <button type="text" class="teacher" id="to_portal" onclick="handleTeacherClick()">I Am A Teacher</button>
                <pre></pre>
                <button type="text" class="login" id="login_button" onclick="handleStudentClick()">Login</button>
            </div>
        </div>
    </div>
    <script>
        

        // Discovery doc URL for APIs used by the quickstart
        const DISCOVERY_DOC = [
            'https://docs.googleapis.com/$discovery/rest?version=v1',
            'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',
            'https://www.googleapis.com/discovery/v1/apis/people/v1/rest'
        ];

        const SCOPES = 'https://www.googleapis.com/auth/documents.readonly '
            + 'https://www.googleapis.com/auth/documents '
            + 'https://www.googleapis.com/auth/drive.file '
            + 'https://www.googleapis.com/auth/plus.me '
            + 'https://www.googleapis.com/auth/userinfo.profile'
        ;

        let tokenClient, token, name;
        let gapiInited = false;
        let gisInited = false;

        document.getElementById('login_button').style.visibility = 'hidden';
        document.getElementById('to_portal').style.visibility = 'hidden';

        /**
         * Callback after api.js is loaded.
         */
        function gapiLoaded() {
            gapi.load('client', initializeGapiClient);
            maybeEnableButtons();
        }

        function gisLoaded() {
            tokenClient = google.accounts.oauth2.initTokenClient({
                client_id: CLIENT_ID,
                scope: SCOPES,
                callback: '', // defined later
            });
            gisInited = true;
            maybeEnableButtons();
        }

        function maybeEnableButtons() {
            if(gapiInited && gisInited) {
                document.getElementById('login_button').style.visibility = 'visible';
                document.getElementById('to_portal').style.visibility = 'visible';
            }
        }

        /**
         * Callback after the API client is loaded. Loads the
         * discovery doc to initialize the API.
         */
        async function initializeGapiClient() {
            try {
                // Initialize the API client
                await gapi.client.init({
                    apiKey: API_KEY,
                    discoveryDocs: DISCOVERY_DOC,
                    // clientId: CLIENT_ID,
                    // scope: SCOPES,
                    // clientSecret: CLIENT_SECRET,
                }).then(function () {
                    console.log("Initialized");
                });
                gapiInited = true;
                maybeEnableButtons();
            } catch (error) {
                console.error(error);
                alert("Error initializing gapi.client: " + error.message);
            }
        }

        async function updateProfileImg() {
            gapi.client.plus.people.get({
                userId: 'me',
            }).then((response) => {
                const profilePictureUrl = response.result.image.url;
                const profilePictureElement = document.querySelector('.profile-picture');
                profilePictureElement.src = profilePictureUrl;
            }, (error) => {
                console.error('Error: ' + error.result.error.message);
            });
        }

        function handleStudentClick() {
            handleAuthClick('student');
        }

        function handleTeacherClick() {
            handleAuthClick('teacher');
        }

        /**
         *  Sign in the user upon button click.
         */
        async function handleAuthClick(identity) {
            tokenClient.callback = async (resp) => {
                if (resp.error !== undefined) {
                    throw (resp);
                }
                //await updateProfileImg();
                if(identity == 'student') {
                    gapi.client.people.people.get({
                        resourceName: 'people/me',
                        personFields: 'names',
                    }).then((res) => {
                        name = res.result.names[0].displayName;
                    }).then(() => {
                        const data = new URLSearchParams();
                        data.append('name', name);
                        data.append('token', gapi.client.getToken().access_token);
                        fetch('/', {
                            method: 'POST',
                            body: data
                        })
                        .then(response => {
                            if(response.ok) {
                                window.location.href = response.url;
                            }
                        })
                        .catch(error => console.error(error))
                    });
                } else {
                    window.location.href = `http://localhost:2020/teacher?token=${gapi.client.getToken().access_token}`;
                }
            };
            if (gapi.client.getToken() === null) {
                tokenClient.requestAccessToken({prompt: 'consent'});
            } else {
                tokenClient.requestAccessToken({prompt: ''});
            }
        }
    </script>
    <script async defer src="https://apis.google.com/js/api.js" onload="gapiLoaded()"></script>
    <script async defer src="https://accounts.google.com/gsi/client" onload="gisLoaded()"></script>
    <script async defer src="https://apis.google.com/js/client.js"></script>
</body>
</html>